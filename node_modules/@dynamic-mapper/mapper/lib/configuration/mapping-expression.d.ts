import { MappingExpressionBase } from './mapping-expression-base';
import { IMappingExpressionBase } from './interface';
import { MemberInfo } from '../interface';
import { MemberConfigurationExpression } from './member-configuration-expression';
export declare class MappingExpression<TSource, TDestination> extends MappingExpressionBase<TSource, TDestination> implements IMappingExpressionBase<TSource, TDestination>, IMappingExpressionBase<TSource, TDestination> {
    forMember<Member extends keyof TDestination>(destinationMember: Member, memberOptions: (expression: MemberConfigurationExpression<TSource, TDestination, TDestination[Member]>) => void): this;
    protected forDestinationMember<TMember>(destinationMember: MemberInfo, memberOptions: (expression: MemberConfigurationExpression<TSource, TDestination, TMember>) => void, auto?: boolean): this;
}
