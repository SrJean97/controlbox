import { ISourceMemberConfigurationExpression } from '../interface';
import { MappingPair } from '../mapping-pair';
import { IAutoMappingExpression } from './interface';
import { MappingExpression } from './mapping-expression';
import { MemberConfigurationExpression } from './member-configuration-expression';
export declare class AutoMappingExpression<TSource, TDestination> extends MappingExpression<TSource, TDestination> implements IAutoMappingExpression<TSource, TDestination> {
    constructor(types: MappingPair<TSource, TDestination>);
    forMember<Member extends keyof TDestination>(destinationMember: Member, memberOptions: (expression: MemberConfigurationExpression<TSource, TDestination, TDestination[Member]>) => void): this;
    forSourceMember<Member extends keyof TSource>(sourceMember: Member, memberOptions: (expression: ISourceMemberConfigurationExpression) => void): this;
}
